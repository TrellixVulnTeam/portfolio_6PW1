{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ren/myjlab/portfolio/src/layouts/contact.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport FormField from '../components/FormField';\nimport Footer from '../components/Footer';\nimport { htmlToReact, markdownify } from '../utils';\nexport default class Contact extends React.Component {\n  render() {\n    const data = _.get(this.props, 'data');\n\n    const config = _.get(data, 'config');\n\n    const header = _.get(config, 'header');\n\n    const page = _.get(this.props, 'page');\n\n    const title = _.get(page, 'title');\n\n    const subtitle = _.get(page, 'subtitle');\n\n    const headerImage = _.get(page, 'img_path') ? _.get(page, 'img_path') : _.get(header, 'background_img');\n\n    const markdownContent = _.get(page, 'markdown_content');\n\n    const formId = _.get(page, 'form_id');\n\n    const formAction = _.get(page, 'form_action');\n\n    const formFields = _.get(page, 'form_fields');\n\n    const submitLabel = _.get(page, 'submit_label');\n\n    const formHoneypotInputId = formId + '-honeypot';\n    const formHoneypotLabelId = formId + '-honeypot-label';\n    const formHoneypotName = formId + '-bot-field';\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      page: page,\n      config: config,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        config: config,\n        page: page,\n        image: headerImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"content\",\n        className: \"site-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          id: \"main\",\n          className: \"site-main inner\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"post page post-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"post-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"post-title\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-subtitle\",\n              children: htmlToReact(subtitle)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-content\",\n              children: [markdownContent && markdownify(markdownContent), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n                name: formId,\n                id: formId\n              }, formAction ? {\n                action: formAction\n              } : null), {}, {\n                method: \"POST\",\n                \"data-netlify\": \"true\",\n                \"data-netlify-honeypot\": formHoneypotName,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"screen-reader-text\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    id: formHoneypotLabelId,\n                    htmlFor: formHoneypotInputId,\n                    children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      \"aria-labelledby\": formHoneypotLabelId,\n                      id: formHoneypotInputId,\n                      name: formHoneypotName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"hidden\",\n                  name: \"form-name\",\n                  value: formId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), _.map(formFields, (field, index) => /*#__PURE__*/_jsxDEV(FormField, {\n                  field: field\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          config: config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ren/myjlab/portfolio/src/layouts/contact.js"],"names":["React","_","Layout","Header","FormField","Footer","htmlToReact","markdownify","Contact","Component","render","data","get","props","config","header","page","title","subtitle","headerImage","markdownContent","formId","formAction","formFields","submitLabel","formHoneypotInputId","formHoneypotLabelId","formHoneypotName","action","map","field","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport FormField from '../components/FormField';\nimport Footer from '../components/Footer';\nimport { htmlToReact, markdownify } from '../utils';\n\nexport default class Contact extends React.Component {\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const header = _.get(config, 'header');\n        const page = _.get(this.props, 'page');\n        const title = _.get(page, 'title');\n        const subtitle = _.get(page, 'subtitle');\n        const headerImage = _.get(page, 'img_path') ? _.get(page, 'img_path') : _.get(header, 'background_img');\n        const markdownContent = _.get(page, 'markdown_content');\n        const formId = _.get(page, 'form_id');\n        const formAction = _.get(page, 'form_action');\n        const formFields = _.get(page, 'form_fields');\n        const submitLabel = _.get(page, 'submit_label');\n        const formHoneypotInputId = formId + '-honeypot';\n        const formHoneypotLabelId = formId + '-honeypot-label';\n        const formHoneypotName = formId + '-bot-field';\n\n        return (\n            <Layout page={page} config={config}>\n                <Header config={config} page={page} image={headerImage} />\n                <div id=\"content\" className=\"site-content\">\n                    <main id=\"main\" className=\"site-main inner\">\n                        <article className=\"post page post-full\">\n                            <header className=\"post-header\">\n                                <h1 className=\"post-title\">{title}</h1>\n                            </header>\n                            {subtitle && <div className=\"post-subtitle\">{htmlToReact(subtitle)}</div>}\n                            <div className=\"post-content\">\n                                {markdownContent && markdownify(markdownContent)}\n                                <form\n                                    name={formId}\n                                    id={formId}\n                                    {...(formAction ? ({ action: formAction }) : null)}\n                                    method=\"POST\"\n                                    data-netlify=\"true\"\n                                    data-netlify-honeypot={formHoneypotName}\n                                >\n                                    <div className=\"screen-reader-text\">\n                                        <label id={formHoneypotLabelId} htmlFor={formHoneypotInputId}>\n                                            Don't fill this out if you're human: \n                                            <input aria-labelledby={formHoneypotLabelId} id={formHoneypotInputId} name={formHoneypotName} />\n                                        </label>\n                                    </div>\n                                    <input type=\"hidden\" name=\"form-name\" value={formId} />\n                                    {_.map(formFields, (field, index) => (\n                                        <FormField key={index} field={field} />\n                                    ))}\n                                    <div className=\"form-submit\">\n                                        {/* <button type=\"submit\" className=\"button\">{submitLabel}</button> */}\n                                    </div>\n                                </form>\n                            </div>\n                        </article>\n                    </main>\n                    <Footer config={config} />\n                </div>\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}