{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ren/myjlab/portfolio/src/layouts/post.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport HeaderAlt from '../components/HeaderAlt';\nimport Footer from '../components/Footer';\nimport { htmlToReact, markdownify } from '../utils';\n\nvar Post = /*#__PURE__*/function (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  var _super = _createSuper(Post);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      var data = _.get(this.props, 'data');\n\n      var config = _.get(data, 'config');\n\n      var header = _.get(config, 'header');\n\n      var page = _.get(this.props, 'page');\n\n      var hideHeader = _.get(page, 'hide_header');\n\n      var title = _.get(page, 'title');\n\n      var subtitle = _.get(page, 'subtitle');\n\n      var headerImage = _.get(page, 'content_img_path') ? _.get(page, 'content_img_path') : _.get(header, 'background_img');\n\n      var date = _.get(page, 'date');\n\n      var dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n      var formattedDate = moment(date).strftime('%B %d, %Y');\n\n      var markdownContent = _.get(page, 'markdown_content');\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        page: page,\n        config: config,\n        children: [hideHeader ? /*#__PURE__*/_jsxDEV(HeaderAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(Header, {\n          config: config,\n          page: page,\n          image: headerImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          className: \"site-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"main\", {\n            id: \"main\",\n            className: \"site-main inner\",\n            children: /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"post post-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"header\", {\n                className: \"post-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"post-title\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-meta\",\n                  children: [\"Published on \", /*#__PURE__*/_jsxDEV(\"time\", {\n                    className: \"published\",\n                    dateTime: dateTimeAttr,\n                    children: formattedDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 50\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-subtitle\",\n                children: htmlToReact(subtitle)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 42\n              }, this), markdownContent && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-content\",\n                children: markdownify(markdownContent)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nexport { Post as default };","map":{"version":3,"sources":["/Users/ren/myjlab/portfolio/src/layouts/post.js"],"names":["React","_","moment","Layout","Header","HeaderAlt","Footer","htmlToReact","markdownify","Post","data","get","props","config","header","page","hideHeader","title","subtitle","headerImage","date","dateTimeAttr","strftime","formattedDate","markdownContent","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\n\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport HeaderAlt from '../components/HeaderAlt';\nimport Footer from '../components/Footer';\nimport { htmlToReact, markdownify } from '../utils';\n\nexport default class Post extends React.Component {\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const header = _.get(config, 'header');\n        const page = _.get(this.props, 'page');\n        const hideHeader = _.get(page, 'hide_header');\n        const title = _.get(page, 'title');\n        const subtitle = _.get(page, 'subtitle');\n        const headerImage = _.get(page, 'content_img_path') ? _.get(page, 'content_img_path') : _.get(header, 'background_img');\n        const date = _.get(page, 'date');\n        const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n        const formattedDate = moment(date).strftime('%B %d, %Y');\n        const markdownContent = _.get(page, 'markdown_content');\n\n        return (\n            <Layout page={page} config={config}>\n                {hideHeader ? <HeaderAlt />\n                    : <Header config={config} page={page} image={headerImage} />}\n                <div id=\"content\" className=\"site-content\">\n                    <main id=\"main\" className=\"site-main inner\">\n                        <article className=\"post post-full\">\n                            <header className=\"post-header\">\n                                <h1 className=\"post-title\">{title}</h1>\n                                <div className=\"post-meta\">\n                                    Published on <time className=\"published\" dateTime={dateTimeAttr}>{formattedDate}</time>\n                                </div>\n                            </header>\n                            {subtitle && <div className=\"post-subtitle\">{htmlToReact(subtitle)}</div>}\n                            {markdownContent && <div className=\"post-content\">{markdownify(markdownContent)}</div>}\n                        </article>\n                    </main>\n                    <Footer config={config} />\n                </div>\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}