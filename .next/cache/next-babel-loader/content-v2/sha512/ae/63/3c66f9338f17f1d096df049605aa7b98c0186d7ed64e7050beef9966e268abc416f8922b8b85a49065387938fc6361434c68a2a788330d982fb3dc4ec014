{"ast":null,"code":"import _defineProperty from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ren/myjlab/portfolio/src/layouts/contact.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport FormField from '../components/FormField';\nimport Footer from '../components/Footer';\nimport { htmlToReact, markdownify } from '../utils';\n\nvar Contact = /*#__PURE__*/function (_React$Component) {\n  _inherits(Contact, _React$Component);\n\n  var _super = _createSuper(Contact);\n\n  function Contact() {\n    _classCallCheck(this, Contact);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Contact, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data = _.get(this.props, 'data');\n\n      var config = _.get(data, 'config');\n\n      var header = _.get(config, 'header');\n\n      var page = _.get(this.props, 'page');\n\n      var title = _.get(page, 'title');\n\n      var subtitle = _.get(page, 'subtitle');\n\n      var headerImage = _.get(page, 'img_path') ? _.get(page, 'img_path') : _.get(header, 'background_img');\n\n      var markdownContent = _.get(page, 'markdown_content');\n\n      var formId = _.get(page, 'form_id');\n\n      var formAction = _.get(page, 'form_action');\n\n      var formFields = _.get(page, 'form_fields');\n\n      var submitLabel = _.get(page, 'submit_label');\n\n      var formHoneypotInputId = formId + '-honeypot';\n      var formHoneypotLabelId = formId + '-honeypot-label';\n      var formHoneypotName = formId + '-bot-field';\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        page: page,\n        config: config,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          config: config,\n          page: page,\n          image: headerImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          className: \"site-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"main\", {\n            id: \"main\",\n            className: \"site-main inner\",\n            children: /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"post page post-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"header\", {\n                className: \"post-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"post-title\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 29\n              }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-subtitle\",\n                children: htmlToReact(subtitle)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-content\",\n                children: [markdownContent && markdownify(markdownContent), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n                  name: formId,\n                  id: formId\n                }, formAction ? {\n                  action: formAction\n                } : null), {}, {\n                  method: \"POST\",\n                  \"data-netlify\": \"true\",\n                  \"data-netlify-honeypot\": formHoneypotName,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"screen-reader-text\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      id: formHoneypotLabelId,\n                      htmlFor: formHoneypotInputId,\n                      children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        \"aria-labelledby\": formHoneypotLabelId,\n                        id: formHoneypotInputId,\n                        name: formHoneypotName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 51,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"hidden\",\n                    name: \"form-name\",\n                    value: formId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 37\n                  }, this), _.map(formFields, function (field, index) {\n                    return /*#__PURE__*/_jsxDEV(FormField, {\n                      field: field\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 41\n                    }, _this);\n                  }), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-submit\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"button\",\n                      children: submitLabel\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 37\n                  }, this)]\n                }), void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Contact;\n}(React.Component);\n\nexport { Contact as default };","map":{"version":3,"sources":["/Users/ren/myjlab/portfolio/src/layouts/contact.js"],"names":["React","_","Layout","Header","FormField","Footer","htmlToReact","markdownify","Contact","data","get","props","config","header","page","title","subtitle","headerImage","markdownContent","formId","formAction","formFields","submitLabel","formHoneypotInputId","formHoneypotLabelId","formHoneypotName","action","map","field","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport FormField from '../components/FormField';\nimport Footer from '../components/Footer';\nimport { htmlToReact, markdownify } from '../utils';\n\nexport default class Contact extends React.Component {\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const header = _.get(config, 'header');\n        const page = _.get(this.props, 'page');\n        const title = _.get(page, 'title');\n        const subtitle = _.get(page, 'subtitle');\n        const headerImage = _.get(page, 'img_path') ? _.get(page, 'img_path') : _.get(header, 'background_img');\n        const markdownContent = _.get(page, 'markdown_content');\n        const formId = _.get(page, 'form_id');\n        const formAction = _.get(page, 'form_action');\n        const formFields = _.get(page, 'form_fields');\n        const submitLabel = _.get(page, 'submit_label');\n        const formHoneypotInputId = formId + '-honeypot';\n        const formHoneypotLabelId = formId + '-honeypot-label';\n        const formHoneypotName = formId + '-bot-field';\n\n        return (\n            <Layout page={page} config={config}>\n                <Header config={config} page={page} image={headerImage} />\n                <div id=\"content\" className=\"site-content\">\n                    <main id=\"main\" className=\"site-main inner\">\n                        <article className=\"post page post-full\">\n                            <header className=\"post-header\">\n                                <h1 className=\"post-title\">{title}</h1>\n                            </header>\n                            {subtitle && <div className=\"post-subtitle\">{htmlToReact(subtitle)}</div>}\n                            <div className=\"post-content\">\n                                {markdownContent && markdownify(markdownContent)}\n                                <form\n                                    name={formId}\n                                    id={formId}\n                                    {...(formAction ? ({ action: formAction }) : null)}\n                                    method=\"POST\"\n                                    data-netlify=\"true\"\n                                    data-netlify-honeypot={formHoneypotName}\n                                >\n                                    <div className=\"screen-reader-text\">\n                                        <label id={formHoneypotLabelId} htmlFor={formHoneypotInputId}>\n                                            Don't fill this out if you're human: \n                                            <input aria-labelledby={formHoneypotLabelId} id={formHoneypotInputId} name={formHoneypotName} />\n                                        </label>\n                                    </div>\n                                    <input type=\"hidden\" name=\"form-name\" value={formId} />\n                                    {_.map(formFields, (field, index) => (\n                                        <FormField key={index} field={field} />\n                                    ))}\n                                    <div className=\"form-submit\">\n                                        <button type=\"submit\" className=\"button\">{submitLabel}</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </article>\n                    </main>\n                    <Footer config={config} />\n                </div>\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}