{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ren/myjlab/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ren/myjlab/portfolio/src/layouts/work.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { getPageUrl, Link, withPrefix } from '../utils';\n\nvar Work = /*#__PURE__*/function (_React$Component) {\n  _inherits(Work, _React$Component);\n\n  var _super = _createSuper(Work);\n\n  function Work() {\n    _classCallCheck(this, Work);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Work, [{\n    key: \"renderPost\",\n    value: function renderPost(post, index, hasMoreLink, moreLinkText) {\n      var title = _.get(post, 'title');\n\n      var thumbImage = _.get(post, 'thumb_img_path');\n\n      var thumbImageAlt = _.get(post, 'thumb_img_alt', '');\n\n      var excerpt = _.get(post, 'excerpt');\n\n      var date = _.get(post, 'date');\n\n      var dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n      var formattedDate = moment(date).strftime('%B %d, %Y');\n      var postUrl = getPageUrl(post, {\n        withPrefix: true\n      });\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"post-title\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: postUrl,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-meta\",\n            children: [\"Published on \", /*#__PURE__*/_jsxDEV(\"time\", {\n              className: \"published\",\n              dateTime: dateTimeAttr,\n              children: formattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), thumbImage && /*#__PURE__*/_jsxDEV(Link, {\n          className: \"post-thumbnail\",\n          href: postUrl,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"thumbnail\",\n            src: withPrefix(thumbImage),\n            alt: thumbImageAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), excerpt && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: excerpt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), hasMoreLink && moreLinkText && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"read-more\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"read-more-link\",\n            href: postUrl,\n            children: [moreLinkText, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-arrow-right\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data = _.get(this.props, 'data');\n\n      var config = _.get(data, 'config');\n\n      var header = _.get(config, 'header');\n\n      var headerImage = _.get(header, 'background_img');\n\n      var page = _.get(this.props, 'page');\n\n      var hasMoreLink = _.get(page, 'has_more_link');\n\n      var moreLinkText = _.get(page, 'more_link_text');\n\n      var posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        page: page,\n        config: config,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          config: config,\n          page: page,\n          image: headerImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          className: \"site-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"main\", {\n            id: \"main\",\n            className: \"site-main inner\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-feed\",\n              children: _.map(posts, function (post, index) {\n                return _this.renderPost(post, index, hasMoreLink, moreLinkText);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Work;\n}(React.Component);\n\nexport { Work as default };","map":{"version":3,"sources":["/Users/ren/myjlab/portfolio/src/layouts/work.js"],"names":["React","_","moment","Layout","Header","Footer","getPageUrl","Link","withPrefix","Work","post","index","hasMoreLink","moreLinkText","title","get","thumbImage","thumbImageAlt","excerpt","date","dateTimeAttr","strftime","formattedDate","postUrl","data","props","config","header","headerImage","page","posts","orderBy","map","renderPost","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\n\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { getPageUrl, Link, withPrefix } from '../utils';\n\nexport default class Work extends React.Component {\n    renderPost(post, index, hasMoreLink, moreLinkText) {\n        const title = _.get(post, 'title');\n        const thumbImage = _.get(post, 'thumb_img_path');\n        const thumbImageAlt = _.get(post, 'thumb_img_alt', '');\n        const excerpt = _.get(post, 'excerpt');\n        const date = _.get(post, 'date');\n        const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n        const formattedDate = moment(date).strftime('%B %d, %Y');\n        const postUrl = getPageUrl(post, { withPrefix: true });\n\n        return (\n            <article key={index} className=\"post\">\n                <header className=\"post-header\">\n                    <h2 className=\"post-title\">\n                        <Link href={postUrl}>{title}</Link>\n                    </h2>\n                    <div className=\"post-meta\">\n                        Published on <time className=\"published\" dateTime={dateTimeAttr}>{formattedDate}</time>\n                    </div>\n                </header>\n                {thumbImage && (\n                    <Link className=\"post-thumbnail\" href={postUrl}>\n                        <img className=\"thumbnail\" src={withPrefix(thumbImage)} alt={thumbImageAlt} />\n                    </Link>\n                )}\n                {excerpt && (\n                    <div className=\"post-content\">\n                        <p>{excerpt}</p>\n                    </div>\n                )}\n                {hasMoreLink && moreLinkText && (\n                    <p className=\"read-more\">\n                        <Link className=\"read-more-link\" href={postUrl}>{moreLinkText} <span className=\"icon-arrow-right\" aria-hidden=\"true\" /></Link>\n                    </p>\n                )}\n            </article>\n        );\n    }\n\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const header = _.get(config, 'header');\n        const headerImage = _.get(header, 'background_img');\n        const page = _.get(this.props, 'page');\n        const hasMoreLink = _.get(page, 'has_more_link');\n        const moreLinkText = _.get(page, 'more_link_text');\n        const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n        return (\n            <Layout page={page} config={config}>\n                <Header config={config} page={page} image={headerImage} />\n                <div id=\"content\" className=\"site-content\">\n                    <main id=\"main\" className=\"site-main inner\">\n                        <div className=\"post-feed\">\n                            {_.map(posts, (post, index) => this.renderPost(post, index, hasMoreLink, moreLinkText))}\n                        </div>\n                    </main>\n                    <Footer config={config} />\n                </div>\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}