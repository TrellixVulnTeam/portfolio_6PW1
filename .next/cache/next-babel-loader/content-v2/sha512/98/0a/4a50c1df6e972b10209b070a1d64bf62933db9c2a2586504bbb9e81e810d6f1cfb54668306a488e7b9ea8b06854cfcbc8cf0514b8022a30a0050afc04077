{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ren/myjlab/portfolio/src/layouts/work.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { getPageUrl, Link, withPrefix } from '../utils';\nexport default class Work extends React.Component {\n  renderPost(post, index, hasMoreLink, moreLinkText) {\n    const title = _.get(post, 'title');\n\n    const thumbImage = _.get(post, 'thumb_img_path');\n\n    const thumbImageAlt = _.get(post, 'thumb_img_alt', '');\n\n    const excerpt = _.get(post, 'excerpt');\n\n    const date = _.get(post, 'date');\n\n    const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n    const formattedDate = moment(date).strftime('%B %d, %Y');\n    const postUrl = getPageUrl(post, {\n      withPrefix: true\n    });\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"post-title\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: postUrl,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-meta\",\n          children: [\"Published on \", /*#__PURE__*/_jsxDEV(\"time\", {\n            className: \"published\",\n            dateTime: dateTimeAttr,\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), thumbImage && /*#__PURE__*/_jsxDEV(Link, {\n        className: \"post-thumbnail\",\n        href: postUrl,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"thumbnail\",\n          src: withPrefix(thumbImage),\n          alt: thumbImageAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), excerpt && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: excerpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), hasMoreLink && moreLinkText && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"read-more\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"read-more-link\",\n          href: postUrl,\n          children: [moreLinkText, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-arrow-right\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const data = _.get(this.props, 'data');\n\n    const config = _.get(data, 'config');\n\n    const header = _.get(config, 'header');\n\n    const headerImage = _.get(page, 'img_path') ? _.get(page, 'img_path') : _.get(header, 'background_img');\n\n    const page = _.get(this.props, 'page');\n\n    const hasMoreLink = _.get(page, 'has_more_link');\n\n    const moreLinkText = _.get(page, 'more_link_text');\n\n    const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      page: page,\n      config: config,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        config: config,\n        page: page,\n        image: headerImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"content\",\n        className: \"site-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          id: \"main\",\n          className: \"site-main inner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-feed\",\n            children: _.map(posts, (post, index) => this.renderPost(post, index, hasMoreLink, moreLinkText))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          config: config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ren/myjlab/portfolio/src/layouts/work.js"],"names":["React","_","moment","Layout","Header","Footer","getPageUrl","Link","withPrefix","Work","Component","renderPost","post","index","hasMoreLink","moreLinkText","title","get","thumbImage","thumbImageAlt","excerpt","date","dateTimeAttr","strftime","formattedDate","postUrl","render","data","props","config","header","headerImage","page","posts","orderBy","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\n\nimport { Layout } from '../components/index';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { getPageUrl, Link, withPrefix } from '../utils';\n\nexport default class Work extends React.Component {\n    renderPost(post, index, hasMoreLink, moreLinkText) {\n        const title = _.get(post, 'title');\n        const thumbImage = _.get(post, 'thumb_img_path');\n        const thumbImageAlt = _.get(post, 'thumb_img_alt', '');\n        const excerpt = _.get(post, 'excerpt');\n        const date = _.get(post, 'date');\n        const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n        const formattedDate = moment(date).strftime('%B %d, %Y');\n        const postUrl = getPageUrl(post, { withPrefix: true });\n\n        return (\n            <article key={index} className=\"post\">\n                <header className=\"post-header\">\n                    <h2 className=\"post-title\">\n                        <Link href={postUrl}>{title}</Link>\n                    </h2>\n                    <div className=\"post-meta\">\n                        Published on <time className=\"published\" dateTime={dateTimeAttr}>{formattedDate}</time>\n                    </div>\n                </header>\n                {thumbImage && (\n                    <Link className=\"post-thumbnail\" href={postUrl}>\n                        <img className=\"thumbnail\" src={withPrefix(thumbImage)} alt={thumbImageAlt} />\n                    </Link>\n                )}\n                {excerpt && (\n                    <div className=\"post-content\">\n                        <p>{excerpt}</p>\n                    </div>\n                )}\n                {hasMoreLink && moreLinkText && (\n                    <p className=\"read-more\">\n                        <Link className=\"read-more-link\" href={postUrl}>{moreLinkText} <span className=\"icon-arrow-right\" aria-hidden=\"true\" /></Link>\n                    </p>\n                )}\n            </article>\n        );\n    }\n\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const header = _.get(config, 'header');\n        const headerImage = _.get(page, 'img_path') ? _.get(page, 'img_path') : _.get(header, 'background_img');\n        const page = _.get(this.props, 'page');\n        const hasMoreLink = _.get(page, 'has_more_link');\n        const moreLinkText = _.get(page, 'more_link_text');\n        const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n        return (\n            <Layout page={page} config={config}>\n                <Header config={config} page={page} image={headerImage} />\n                <div id=\"content\" className=\"site-content\">\n                    <main id=\"main\" className=\"site-main inner\">\n                        <div className=\"post-feed\">\n                            {_.map(posts, (post, index) => this.renderPost(post, index, hasMoreLink, moreLinkText))}\n                        </div>\n                    </main>\n                    <Footer config={config} />\n                </div>\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}